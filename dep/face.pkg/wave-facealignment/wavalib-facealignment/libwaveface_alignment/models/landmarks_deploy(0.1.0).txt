name:"Deep-alignment-network"
layer {
  name: "input"
  type: "Input"
  top: "data"
  input_param{
	  shape{
		  dim:1
		  dim:3
		  dim:112
		  dim:112
	  }
  }
}
layer {
  name: "input"
  type: "Input"
  top: "label_gt"
  input_param{
	  shape{
		  dim:1
		  dim:136
		  dim:1
		  dim:1
	  }
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1.0
    decay_mult: 1.0
  }
  param {
    lr_mult: 2.0
    decay_mult: 0.0
  }
  convolution_param {
    num_output: 32
    pad: 1
    kernel_size: 3
    stride: 2
    weight_filler {
      type: "gaussian"
      std: 0.0001
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "conv_bn1"
  type: "BatchNorm"
  bottom: "conv1"
  top: "conv1"
batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "conv_scale1"
  type: "Scale"
  bottom: "conv1"
  top: "conv1"
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 1.0
    decay_mult: 1.0
  }
  scale_param {
    filler {
      type: "constant"
      value: 1.0
    }
    bias_term: true
    bias_filler {
      type: "constant"
      value: 0.0
    }
  }
}

layer {
  name: "relu1_1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    lr_mult: 1.0
    decay_mult: 1.0
  }
  param {
    lr_mult: 2.0
    decay_mult: 0.0
  }
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
   weight_filler {
      type: "gaussian"
      std: 0.0001
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "conv_bn2"
  type: "BatchNorm"
  bottom: "conv2"
  top: "conv2"
batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "conv_scale2"
  type: "Scale"
  bottom: "conv2"
  top: "conv2"
  param {
    lr_mult: 1.0
    decay_mult: 2.0
  }
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  scale_param {
    filler {
      type: "constant"
      value: 1.0
    }
    bias_term: true
    bias_filler {
      type: "constant"
      value: 0.0
    }
  }
}

layer {
  name: "relu2"
  type: "PReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "fc_1_2"
  type: "InnerProduct"
  bottom: "pool2"
  top: "fc_1_2"
  param {
    lr_mult: 1.0
    decay_mult: 1.0
  }
  param {
    lr_mult: 2.0
    decay_mult: 0.0
  }
  inner_product_param {
    num_output: 256
   weight_filler {
      type: "gaussian"
      std: 0.0001
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3"
  param {
    lr_mult: 1.0
    decay_mult: 1.0
  }
  param {
    lr_mult: 2.0
    decay_mult: 0.0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
   weight_filler {
      type: "gaussian"
      std: 0.0001
    }
    bias_filler {
      type: "constant"
    }
  }
}


layer {
  name: "conv_bn3"
  type: "BatchNorm"
  bottom: "conv3"
  top: "conv3"

batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "conv_scale3"
  type: "Scale"
  bottom: "conv3"
  top: "conv3"
  param {
    lr_mult: 1.0
    decay_mult: 2.0
  }
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  scale_param {
    filler {
      type: "constant"
      value: 1.0
    }
    bias_term: true
    bias_filler {
      type: "constant"
      value: 0.0
    }
  }
}

layer {
  name: "relu3"
  type: "PReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3"
  top: "pool3"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "fc_1_3"
  type: "InnerProduct"
  bottom: "pool3"
  top: "fc_1_3"
  param {
    lr_mult: 1.0
    decay_mult: 1.0
  }
  param {
    lr_mult: 2.0
    decay_mult: 0.0
  }
  inner_product_param {
    num_output: 256
   weight_filler {
      type: "gaussian"
      std: 0.0001
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "pool3"
  top: "conv4"
  param {
    lr_mult: 1.0
    decay_mult: 1.0
  }
  param {
    lr_mult: 2.0
    decay_mult: 0.0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
   weight_filler {
      type: "gaussian"
      std: 0.0001
    }
    bias_filler {
      type: "constant"
    }
  }
}


layer {
  name: "conv_bn4"
  type: "BatchNorm"
  bottom: "conv4"
  top: "conv4"

 batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "conv_scale4"
  type: "Scale"
  bottom: "conv4"
  top: "conv4"
  param {
    lr_mult: 1.0
    decay_mult: 2.0
  }
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  scale_param {
    filler {
      type: "constant"
      value: 1.0
    }
    bias_term: true
    bias_filler {
      type: "constant"
      value: 0.0
    }
  }
}

layer {
  name: "relu4"
  type: "PReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "pool4"
  type: "Pooling"
  bottom: "conv4"
  top: "pool4"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "fc_1_4"
  type: "InnerProduct"
  bottom: "pool4"
  top: "fc_1_4"
  param {
    lr_mult: 1.0
    decay_mult: 1.0
  }
  param {
    lr_mult: 2.0
    decay_mult: 0.0
  }
  inner_product_param {
    num_output: 256
   weight_filler {
      type: "gaussian"
      std: 0.0001
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "fc_1"
  type: "Concat"
   bottom: "fc_1_2"
   bottom: "fc_1_3"
   bottom: "fc_1_4"
  top: "fc_1"
}
layer {
  name: "relu5_2"
  type: "ReLU"
  bottom: "fc_1"
  top: "fc_1"
}
layer {
  name: "fc_2_1_00"
  type: "InnerProduct"
  bottom: "fc_1"
  top: "fc_2_1"
    
  param {
    lr_mult: 1.0
    decay_mult: 1.0
  }
  param {
    lr_mult: 2.0
    decay_mult: 0.0
  }
  inner_product_param {
    num_output: 256
    weight_filler {
      type: "gaussian"
      std: 0.0001
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "fc_2_1"
  top: "fc_2_1"
}
layer {
  name: "fc_2_3"
  type: "InnerProduct"
  bottom: "fc_2_1"
  top: "fc_2"
    
  param {
    lr_mult: 1.0
    decay_mult: 1.0
  }
  param {
    lr_mult: 2.0
    decay_mult: 0.0
  }
  inner_product_param {
    num_output: 136
    weight_filler {
      type: "gaussian"
      std: 0.0001
    }
    bias_filler {
      type: "constant"
    }
  }
}

#stage2

layer {
  name: "feature_map"
  type: "InnerProduct"
  bottom: "fc_2_1"
  top: "feature_map"
  param {
    lr_mult: 1.0
    decay_mult: 1.0
  }
  param {
    lr_mult: 2.0
    decay_mult: 0.0
  }
  inner_product_param {
    num_output: 3136
    weight_filler {
      type: "gaussian"
      std: 0.0001
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
    name: "feature_map_reshape"
    type: "Reshape"
    bottom: "feature_map"
    top: "feature_map_reshape"
    reshape_param {
      shape {
        dim: -1  
        dim: 1
        dim: 56
        dim: 56 
      }
    }
  }
layer {
    name: "up_feature_map"
    type: "Upsample"
    bottom: "feature_map_reshape"
    top: "up_feature_map"
    upsample_param {
      upsample_h:112
  	  upsample_w:112
    }
  }
 layer {
  name: "embedding/normalize"
  type: "Normalize"
  bottom: "up_feature_map"
  top: "up_feature_map"
}
 layer {
    name: "connect_map"
    type: "Connect"
    bottom: "data"
    bottom: "label_gt"
    bottom: "fc_2"
    top: "data_trains"
    top: "data_heatmap"
    top: "label_pre"
   include { 
    phase: TEST
  }
  
  }
layer {
  name: "concat_map"
  type: "Concat"
   bottom: "data_trains"
   bottom: "data_heatmap"
   bottom: "up_feature_map"
   top: "concat_map"
}
layer {
  name: "conv1_1"
  type: "Convolution"
  bottom: "concat_map"
  top: "conv1_1"
  param {
    lr_mult: 1.0
    decay_mult: 1.0
  }
  param {
    lr_mult: 2.0
    decay_mult: 0.0
  }
  convolution_param {
    num_output: 32
    pad: 1
    kernel_size: 3
    stride: 2
    weight_filler {
      type: "gaussian"
      std: 0.0001
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "conv_bn1_1"
  type: "BatchNorm"
  bottom: "conv1_1"
  top: "conv1_1"
batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "conv_scale1_1"
  type: "Scale"
  bottom: "conv1_1"
  top: "conv1_1"
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 1.0
    decay_mult: 1.0
  }
  scale_param {
    filler {
      type: "constant"
      value: 1.0
    }
    bias_term: true
    bias_filler {
      type: "constant"
      value: 0.0
    }
  }
}

layer {
  name: "relu1_1_1"
  type: "ReLU"
  bottom: "conv1_1"
  top: "conv1_1"
}
layer {
  name: "pool1_1"
  type: "Pooling"
  bottom: "conv1_1"
  top: "pool1_1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
 name: "fc_2_1_1"
  type: "InnerProduct"
  bottom: "pool1_1"
  top: "fc_2_1_1"
  param {
    lr_mult: 1.0
    decay_mult: 1.0
  }
  param {
    lr_mult: 2.0
    decay_mult: 0.0
  }
  inner_product_param {
    num_output: 256
    weight_filler {
      type: "gaussian"
      std: 0.0001
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "conv2_2"
  type: "Convolution"
  bottom: "pool1_1"
  top: "conv2_2"
  param {
    lr_mult: 1.0
    decay_mult: 1.0
  }
  param {
    lr_mult: 2.0
    decay_mult: 0.0
  }
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
   weight_filler {
      type: "gaussian"
      std: 0.0001
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "conv_bn2_2"
  type: "BatchNorm"
  bottom: "conv2_2"
  top: "conv2_2"
batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "conv_scale2_2"
  type: "Scale"
  bottom: "conv2_2"
  top: "conv2_2"
  param {
    lr_mult: 1.0
    decay_mult: 2.0
  }
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  scale_param {
    filler {
      type: "constant"
      value: 1.0
    }
    bias_term: true
    bias_filler {
      type: "constant"
      value: 0.0
    }
  }
}

layer {
  name: "relu2_2"
  type: "PReLU"
  bottom: "conv2_2"
  top: "conv2_2"
}
layer {
  name: "pool2_2"
  type: "Pooling"
  bottom: "conv2_2"
  top: "pool2_2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "fc_2_1_2"
  type: "InnerProduct"
  bottom: "pool2_2"
  top: "fc_2_1_2"
  param {
    lr_mult: 1.0
    decay_mult: 1.0
  }
  param {
    lr_mult: 2.0
    decay_mult: 0.0
  }
  inner_product_param {
    num_output: 256
    weight_filler {
      type: "gaussian"
      std: 0.0001
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "fc_2_1_4"
  type: "Concat"
   bottom: "fc_2_1_1"
   bottom: "fc_2_1_2"
  top: "fc_2_1_concat"
}
layer {
  name: "relu5_1_1"
  type: "ReLU"
  bottom: "fc_2_1_concat"
  top: "fc_2_1_concat"
}
layer {
  name: "fc_2_3_2"
  type: "InnerProduct"
  bottom: "fc_2_1_concat"
  top: "fc_2_3_1"
  param {
    lr_mult: 1.0
    decay_mult: 1.0
  }
  param {
    lr_mult: 2.0
    decay_mult: 0.0
  }
  inner_product_param {
    num_output: 136
    weight_filler {
      type: "gaussian"
      std: 0.0001
    }
    bias_filler {
      type: "constant"
    }
  }
}
